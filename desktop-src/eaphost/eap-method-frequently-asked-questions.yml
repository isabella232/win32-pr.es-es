### YamlMime:FAQ
metadata:
  title: Preguntas más frecuentes sobre el método EAP
  description: Proporciona respuestas a las preguntas de programación más frecuentes sobre la creación de métodos EAP.
  ms.assetid: 244e048f-4cc0-4094-a2b9-0f84674a293c
  ms.topic: article
  ms.date: 05/31/2018
  ms.openlocfilehash: 77ca3774f8959b0c6752c65b4088ef11630191ba
  ms.sourcegitcommit: d75fc10b9f0825bbe5ce5045c90d4045e3c53243
  ms.translationtype: MT
  ms.contentlocale: es-ES
  ms.lasthandoff: 09/13/2021
  ms.locfileid: "127568804"
title: Preguntas más frecuentes sobre el método EAP
summary: En este tema se proporcionan respuestas a las preguntas de programación más frecuentes sobre la creación de métodos EAP.
sections:
- name: Omitido
  questions:
  - question: >
      ¿Qué son los "datos de configuración"?
    answer: >
      Los &quot; términos datos de configuración &quot; y datos de conexión son &quot; &quot; sinónimos.
  - question: >
      ¿Qué son los "datos de conexión"?
    answer: data &quot; es un blob opaco específico del método EAP que contiene información de configuración para el método. El método crea estos datos de conexión cuando se configuran inicialmente y nunca los interpreta ni modifica ningún otro componente que no sea el propio método EAP.
  - question: >
      ¿Qué son las "credenciales"?
    answer: >
      Los &quot; términos credenciales &quot; y datos de usuario son &quot; &quot; sinónimos.
  - question: >
      ¿Qué son los "datos de usuario"?
    answer: data es un BLOB opaco específico del método EAP que contiene datos de credenciales de usuario, como &quot; un nombre de usuario y una contraseña. Los datos de usuario nunca se interpretan ni modifican por ningún otro componente que no sea el propio método EAP. Los &quot; términos datos de &quot; usuario y credenciales son &quot; &quot; sinónimos.
  - question: >
      ¿Qué es un "atributo EAP"?
    answer: >
      Un &quot; atributo EAP es una estructura de datos que contiene un tipo predeterminado de &quot; datos. Los atributos se usan para comunicar información entre métodos EAP y suplicantes, o entre métodos EAP y autenticadores. Las implementaciones del mismo nivel y autenticador de un método EAP pueden intercambiar estos atributos a través de una red.
  - question: >
      ¿Pueden la API de configuración y la API en tiempo de ejecución aparecer en el mismo archivo DLL de método?
    answer: >
      Sí. Asegúrese de especificar la distinción al configurar las entradas del Registro para el propio método EAP. La ruta de acceso de configuración y la ruta de acceso del mismo nivel deben ser las mismas.
  - question: >
      ¿Pueden aparecer la API de configuración y la API en tiempo de ejecución en archivos DLL de método independientes?
    answer: >
      Sí. Asegúrese de especificar la distinción al configurar las entradas del Registro para el propio método EAP. La configuración y las rutas de acceso del mismo nivel deben apuntar a los archivos DLL correctos.
  - question: >
      Cómo instalar un método EAP?
    answer: >
      Para instalar un método EAP, primero debe implementar [<strong>DllRegisterServer</strong>](/windows/win32/api/olectl/nf-olectl-dllregisterserver) y [<strong>DllUnregisterServer en</strong>](/windows/win32/api/olectl/nf-olectl-dllunregisterserver) el propio archivo DLL del método EAP. Después, <strong> use </strong>regsvr32.exepara instalar y desinstalar el método . También se deben establecer las claves del Registro adecuadas. Para obtener más información, vea [Installing an EAP Method](installing-an-eap-method.md).<br/>
  - question: >
      ¿Qué es la compatibilidad con protección de acceso a redes (NAP) en banda?
    answer: >
      Cuando se habilita la compatibilidad [con NAP](/windows/desktop/NAP/network-access-protection-start-page) en banda, los paquetes NAP se transportan dentro de paquetes de método EAP. Por el contrario, cuando se habilita la compatibilidad con NAP fuera de banda, el intercambio de la declaración de mantenimiento [de](https://go.microsoft.com/fwlink/p/?linkid=83917) NAP (SoH) se produce a través de medios distintos de los paquetes de métodos de EAP internos y los certificados generados por NAP se usan en la autenticación de métodos EAP.
  - question: >
      ¿Puedo habilitar la compatibilidad con NAP en banda para mi método EAP?
    answer: >
      Sí, se puede habilitar la compatibilidad de NAP en banda con el método EAP. Para obtener más información, vea [Habilitación de In-Band NAP para métodos EAP](enabling-in-band-nap-support.md).
  - question: >
      ¿Cómo funciona la autenticación flexible de EAP a través de la tunelización segura (EAP-FAST)?
    answer: >
      El escenario de FAST EAP funciona de la manera siguiente. <br/>

      <ul>

      <li>El método procesa un cambio de contraseña en el inicio de sesión único (SSO) que emplea la interfaz de usuario del método.</li>

      <li>El método devuelve el atributo [<strong>eatCredentialsChanged</strong>](/windows/desktop/api/eaptypes/ne-eaptypes-eap_attribute_type).</li>

      <li>El suplicante indica al usuario que las credenciales han cambiado y solicita al usuario que vuelva a escribir sus credenciales.</li>

      <li>El suplicante vuelve a escribir las credenciales de usuario y las envía al método .</li>

      </ul>

      Para obtener más información sobre eap-FAST, consulte [Autenticación flexible](https://go.microsoft.com/fwlink/p/?linkid=84010) de EAP a través de la tunelización segura (EAP-FAST).
  - question: >
      ¿Qué es la clave previamente compartida (PSK)?
    answer: >
      Método de transmisión y recepción de señales digitales en el que la fase de una señal transmitida varía para transmitir información. El [<strong>campo de entrada EAPConfigInputPSK</strong>](/windows/desktop/api/eaptypes/ne-eaptypes-eap_config_input_field_type) contiene el valor de EAP-FAST PSK del usuario.
  - question: >
      ¿Qué es WOW y cómo le importa a EAPHost?
    answer: >
      Microsoft Windows-32-bit-On-Windows-64-bit (WOW) es un componente de sistema operativo en Windows de 64 bits que admite aplicaciones de plataforma x86 de 32 bits. Normalmente, un autor del método EAP definiría algún tipo de estructura de C/C++ para encapsular los datos de configuración, los datos de credenciales y los datos interactivos de la interfaz de usuario. Para evitar incompatibilidades en WOW y otros escenarios, es importante asegurarse de que las estructuras de datos se alinean de forma similar en diferentes arquitecturas de procesador (procesadores de 32 y 64 bits). Normalmente, el relleno ficticio se usa para alinear los campos de modo que los datos de configuración, credencial e interfaz de usuario interactiva sean idénticos en procesadores de 32 y 64 bits.
  - question: >
      ¿Qué son los "códigos de acción" y en qué condiciones se devuelven estos códigos de acción?
    answer: >
      &quot;Los códigos de &quot; acción permiten a los métodos controlar el flujo de autenticación y son integrales para la máquina de estados. Son valores devueltos por un método EAP para indicar la siguiente acción que debe realizar EAPHost. Por ejemplo, un código de acción podría indicar a EAPHost que el método EAP tiene un paquete listo para la transmisión. El suplicante cumple todos los códigos de acción devueltos por un método EAP, pero nunca emite códigos de acción. Para obtener más información, vea [EAP Peer Supplicant Action Codes](/windows/win32/api/eaphostpeertypes/ne-eaphostpeertypes-eaphostpeerresponseaction).<br/>
  - question: >
      ¿Cuándo devuelve un método "EapPeerMethodResponseActionDiscard" y qué significa este código de acción para EAPHost?
    answer: >
      Un método EAP devuelve [<strong>EapPeerMethodResponseActionDiscard</strong>](/windows/win32/api/eapauthenticatoractiondefine/ne-eapauthenticatoractiondefine-eappeermethodresponseaction) para indicar al EAPHost que debe descartar el paquete que proporcionó al método. En concreto, el método ha determinado que el paquete no es válido. EAPHost espera a continuación el siguiente paquete.
  - question: >
      ¿Cuándo devuelve un método "EapPeerMethodResponseActionSend" y qué significa este código de acción para EAPHost?
    answer: >
      Un método EAP devuelve [<strong>EapPeerMethodResponseActionSend</strong>](/windows/win32/api/eapauthenticatoractiondefine/ne-eapauthenticatoractiondefine-eappeermethodresponseaction) para indicar a EAPHost que el siguiente paquete recibido por EAPHost debe enviarse al servidor de acceso a la red (NAS).
  - question: >
      ¿Cuándo devuelve un método "EapPeerMethodResponseActionResult" y qué significa este código de acción para EAPHost?
    answer: >
      Un método EAP devuelve [<strong>EapPeerMethodResponseActionResult</strong>](/windows/win32/api/eapauthenticatoractiondefine/ne-eapauthenticatoractiondefine-eappeermethodresponseaction) para indicar al EAPHost que la sesión de autenticación ha finalizado y que los resultados de esa sesión están disponibles.
  - question: >
      ¿Cuándo devuelve un método "EapPeerMethodResponseActionInvokeUI" y qué significa este código de acción para EAPHost?
    answer: >
      Un método EAP devuelve [<strong>EapPeerMethodResponseActionInvokeUI</strong>](/windows/win32/api/eapauthenticatoractiondefine/ne-eapauthenticatoractiondefine-eappeermethodresponseaction) para indicar a EAPHost que la entrada del usuario es necesaria para continuar con la autenticación y que se debe mostrar un cuadro de diálogo de interfaz de usuario para obtener esa entrada. Una vez que se han obtenido los datos de entrada del usuario, EAPHost puede volver a llamar al método EAP con los datos de contexto de la interfaz de usuario actualizados.
  - question: >
      ¿Cuándo devuelve un método "EapPeerMethodResponseActionRespond" y qué significa este código de acción para EAPHost?
    answer: >
      Un método EAP devuelve [<strong>EapPeerMethodResponseActionRespond</strong>](/windows/win32/api/eapauthenticatoractiondefine/ne-eapauthenticatoractiondefine-eappeermethodresponseaction) para indicar a EAPHost que el método EAP tiene atributos disponibles para que EAPHost los use durante la autenticación. EAPHost obtiene los atributos llamando al método [<strong>EapPeerGetResponseAttributes</strong>](/previous-versions/windows/desktop/api/eapmethodpeerapis/nf-eapmethodpeerapis-eappeergetresponseattributes) seguido de una llamada al [<strong>método EapPeerSetResponseAttributes.</strong>](/previous-versions/windows/desktop/api/eapmethodpeerapis/nf-eapmethodpeerapis-eappeersetresponseattributes)
  - question: >
      ¿Cuándo devuelve un método "EapPeerMethodResponseActionNone" y qué significa este código de acción para EAPHost?
    answer: >
      Un método EAP devuelve [<strong>EapPeerMethodResponseActionNone</strong>](/windows/win32/api/eapauthenticatoractiondefine/ne-eapauthenticatoractiondefine-eappeermethodresponseaction) para indicar a EAPHost que no se requiere ninguna acción en este momento.
  - question: >
      ¿Puedo habilitar el seguimiento en el lado autenticador?
    answer: "Sí. Para obtener más información, vea [Habilitación del seguimiento.](enabling-tracing.md)\n \n"
additionalContent: "\n## <a name=\"related-topics\"></a>Temas relacionados\n\n[Referencia de API del método del mismo nivel de EAPHost](eap-host-peer-method-api-reference.md)\n\n[Preguntas más frecuentes generales de EAPHost](general-frequently-asked-questions.yml)\n\n[Preguntas más frecuentes sobre eaphost suplicant](eaphost-supplicant-frequently-asked-questions.yml)\n\n[Preguntas más frecuentes sobre el desarrollo de EAPHost](eaphost-development-frequently-asked-questions.md)"
